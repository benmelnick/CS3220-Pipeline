

================================================================
== Vitis HLS Report for 'mulBF16'
================================================================
* Date:           Sun Apr 25 11:38:02 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        MultHLS
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.085 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|     none|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.08>
ST_1 : Operation 3 [1/1] (1.00ns)   --->   "%b_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %b"   --->   Operation 3 'read' 'b_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 4 [1/1] (1.00ns)   --->   "%a_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %a"   --->   Operation 4 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%empty = trunc i32 %b_read"   --->   Operation 5 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty_14 = trunc i32 %a_read"   --->   Operation 6 'trunc' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6"   --->   Operation 7 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %a"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %a, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %b"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %b, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %c"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %c, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%exponent_a = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %a_read, i32 7, i32 14" [mulBF16.cpp:17]   --->   Operation 17 'partselect' 'exponent_a' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%mantissa_a = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i7, i1 1, i7 %empty_14" [mulBF16.cpp:43]   --->   Operation 18 'bitconcatenate' 'mantissa_a' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i8 %mantissa_a" [mulBF16.cpp:34]   --->   Operation 19 'zext' 'zext_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%exponent_b = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %b_read, i32 7, i32 14" [mulBF16.cpp:17]   --->   Operation 20 'partselect' 'exponent_b' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%mantissa_b = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i1.i7, i1 1, i7 %empty" [mulBF16.cpp:48]   --->   Operation 21 'bitconcatenate' 'mantissa_b' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln34_1 = zext i8 %mantissa_b" [mulBF16.cpp:34]   --->   Operation 22 'zext' 'zext_ln34_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.55ns)   --->   "%icmp_ln51 = icmp_eq  i8 %exponent_a, i8 0" [mulBF16.cpp:51]   --->   Operation 23 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (1.55ns)   --->   "%icmp_ln51_1 = icmp_eq  i8 %exponent_b, i8 0" [mulBF16.cpp:51]   --->   Operation 24 'icmp' 'icmp_ln51_1' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.97ns)   --->   "%or_ln51 = or i1 %icmp_ln51, i1 %icmp_ln51_1" [mulBF16.cpp:51]   --->   Operation 25 'or' 'or_ln51' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %or_ln51, void, void %._crit_edge" [mulBF16.cpp:51]   --->   Operation 26 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.55ns)   --->   "%icmp_ln56 = icmp_eq  i8 %exponent_a, i8 255" [mulBF16.cpp:56]   --->   Operation 27 'icmp' 'icmp_ln56' <Predicate = (!or_ln51)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.55ns)   --->   "%icmp_ln56_1 = icmp_eq  i8 %exponent_b, i8 255" [mulBF16.cpp:56]   --->   Operation 28 'icmp' 'icmp_ln56_1' <Predicate = (!or_ln51)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.97ns)   --->   "%or_ln56 = or i1 %icmp_ln56, i1 %icmp_ln56_1" [mulBF16.cpp:56]   --->   Operation 29 'or' 'or_ln56' <Predicate = (!or_ln51)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln56 = br i1 %or_ln56, void, void %._crit_edge" [mulBF16.cpp:56]   --->   Operation 30 'br' 'br_ln56' <Predicate = (!or_ln51)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (4.17ns)   --->   "%raw_m_ab = mul i16 %zext_ln34_1, i16 %zext_ln34" [mulBF16.cpp:70]   --->   Operation 31 'mul' 'raw_m_ab' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 4.17> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.17> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node add_ln84_1)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %raw_m_ab, i32 15" [mulBF16.cpp:73]   --->   Operation 32 'bitselect' 'tmp_1' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node add_ln84_1)   --->   "%select_ln66 = select i1 %tmp_1, i9 386, i9 385" [mulBF16.cpp:66]   --->   Operation 33 'select' 'select_ln66' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node add_ln84_1)   --->   "%zext_ln66 = zext i8 %exponent_a" [mulBF16.cpp:66]   --->   Operation 34 'zext' 'zext_ln66' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %raw_m_ab, i32 15" [mulBF16.cpp:73]   --->   Operation 35 'bitselect' 'tmp_2' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%st = partselect i8 @_ssdm_op_PartSelect.i8.i16.i32.i32, i16 %raw_m_ab, i32 8, i32 15" [mulBF16.cpp:73]   --->   Operation 36 'partselect' 'st' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%sf = partselect i9 @_ssdm_op_PartSelect.i9.i16.i32.i32, i16 %raw_m_ab, i32 7, i32 15" [mulBF16.cpp:73]   --->   Operation 37 'partselect' 'sf' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln84_1 = add i9 %zext_ln66, i9 %select_ln66" [mulBF16.cpp:84]   --->   Operation 38 'add' 'add_ln84_1' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.81>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%xor_ln61 = xor i32 %b_read, i32 %a_read" [mulBF16.cpp:61]   --->   Operation 39 'xor' 'xor_ln61' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%tmp = partselect i17 @_ssdm_op_PartSelect.i17.i32.i32.i32, i32 %xor_ln61, i32 15, i32 31" [mulBF16.cpp:84]   --->   Operation 40 'partselect' 'tmp' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i8 %exponent_b" [mulBF16.cpp:73]   --->   Operation 41 'zext' 'zext_ln73' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln73_1 = zext i8 %st" [mulBF16.cpp:73]   --->   Operation 42 'zext' 'zext_ln73_1' <Predicate = (!or_ln51 & !or_ln56 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln73_2 = zext i9 %sf" [mulBF16.cpp:73]   --->   Operation 43 'zext' 'zext_ln73_2' <Predicate = (!or_ln51 & !or_ln56 & !tmp_2)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.96ns)   --->   "%mantissa_c = select i1 %tmp_2, i16 %zext_ln73_1, i16 %zext_ln73_2" [mulBF16.cpp:73]   --->   Operation 44 'select' 'mantissa_c' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.96> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %mantissa_c, i32 8" [mulBF16.cpp:81]   --->   Operation 45 'bitselect' 'tmp_4' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%trunc_ln81 = trunc i16 %mantissa_c" [mulBF16.cpp:81]   --->   Operation 46 'trunc' 'trunc_ln81' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln84 = sext i9 %add_ln84_1" [mulBF16.cpp:84]   --->   Operation 47 'sext' 'sext_ln84' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.82ns)   --->   "%add_ln84 = add i10 %sext_ln84, i10 %zext_ln73" [mulBF16.cpp:84]   --->   Operation 48 'add' 'add_ln84' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%tmp_3 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i10.i7, i10 %add_ln84, i7 0" [mulBF16.cpp:84]   --->   Operation 49 'bitconcatenate' 'tmp_3' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%sext_ln84_1 = sext i17 %tmp_3" [mulBF16.cpp:84]   --->   Operation 50 'sext' 'sext_ln84_1' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node or_ln84)   --->   "%tmp1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i6.i1.i1.i7, i17 %tmp, i6 0, i1 %tmp_4, i1 0, i7 %trunc_ln81" [mulBF16.cpp:84]   --->   Operation 51 'bitconcatenate' 'tmp1' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln84 = or i32 %tmp1, i32 %sext_ln84_1" [mulBF16.cpp:84]   --->   Operation 52 'or' 'or_ln84' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.00ns)   --->   "%write_ln84 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %c, i32 %or_ln84" [mulBF16.cpp:84]   --->   Operation 53 'write' 'write_ln84' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln85 = br void %._crit_edge" [mulBF16.cpp:85]   --->   Operation 54 'br' 'br_ln85' <Predicate = (!or_ln51 & !or_ln56)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%ret_ln85 = ret" [mulBF16.cpp:85]   --->   Operation 55 'ret' 'ret_ln85' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 7.08ns
The critical path consists of the following:
	s_axi read on port 'b' [4]  (1 ns)
	'mul' operation ('raw_m_ab', mulBF16.cpp:70) [36]  (4.17 ns)
	'select' operation ('select_ln66', mulBF16.cpp:66) [38]  (0 ns)
	'add' operation ('add_ln84_1', mulBF16.cpp:84) [49]  (1.92 ns)

 <State 2>: 3.82ns
The critical path consists of the following:
	'add' operation ('add_ln84', mulBF16.cpp:84) [51]  (1.82 ns)
	'or' operation ('or_ln84', mulBF16.cpp:84) [55]  (0.993 ns)
	s_axi write on port 'c' (mulBF16.cpp:84) [56]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
